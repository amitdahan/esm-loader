import _ from"path";import{fileURLToPath as I,pathToFileURL as L}from"url";import{installSourceMapSupport as M,resolveTsPath as F,transform as P,applySourceMap as f,transformDynamicImport as j}from"@esbuild-kit/core-utils";import{getTsconfig as x,createPathsMatcher as $}from"get-tsconfig";import O from"fs";const u=M(),d=x(),k=d==null?void 0:d.config,v=d&&$(d),l=/\.([cm]?ts|[tj]sx)$/,S=t=>{const r=_.extname(t);if(r===".mjs"||r===".mts")return"module";if(r===".cjs"||r===".cts")return"commonjs"},g=new Map;async function A(t){if(g.has(t))return g.get(t);if(!await O.promises.access(t).then(()=>!0,()=>!1)){g.set(t,void 0);return}const s=await O.promises.readFile(t,"utf8");try{const o=JSON.parse(s);return g.set(t,o),o}catch{throw new Error(`Error parsing: ${t}`)}}async function V(t){let r=new URL("package.json",t);for(;!r.pathname.endsWith("/node_modules/package.json");){const s=I(r),o=await A(s);if(o)return o;const n=r;if(r=new URL("../package.json",r),r.pathname===n.pathname)break}}async function E(t){var r;const s=await V(t);return(r=s==null?void 0:s.type)!=null?r:"commonjs"}var C=Object.defineProperty,q=Object.defineProperties,z=Object.getOwnPropertyDescriptors,U=Object.getOwnPropertySymbols,B=Object.prototype.hasOwnProperty,H=Object.prototype.propertyIsEnumerable,D=(t,r,s)=>r in t?C(t,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):t[r]=s,J=(t,r)=>{for(var s in r||(r={}))B.call(r,s)&&D(t,s,r[s]);if(U)for(var s of U(r))H.call(r,s)&&D(t,s,r[s]);return t},W=(t,r)=>q(t,z(r));const K=[".js",".json",".ts",".tsx",".jsx"];async function b(t,r,s){let o;for(const n of K)try{return await h(t+n,r,s,!0)}catch(e){if(o===void 0){const{message:i}=e;e.message=e.message.replace(`${n}'`,"'"),e.stack=e.stack.replace(i,e.message),o=e}}throw o}async function R(t,r,s){const o=t.endsWith("/")?"index":"/index";try{return await b(t+o,r,s)}catch(n){const{message:e}=n;throw n.message=n.message.replace(`${o.replace("/",_.sep)}'`,"'"),n.stack=n.stack.replace(e,n.message),n}}const T="file://",Q=/^\.{0,2}\//,h=async function(t,r,s,o){var n,e;if(t.startsWith("node:")&&(t=t.slice(5)),t.endsWith("/"))return await R(t,r,s);const i=t.startsWith(T)||Q.test(t);if(v&&!i&&!((n=r.parentURL)!=null&&n.includes("/node_modules/"))){const a=v(t);for(const m of a)try{return await h(L(m).toString(),r,s)}catch{}}if(l.test(r.parentURL)){const a=F(t);if(a)try{return await h(a,r,s,!0)}catch(m){if(m.code!=="ERR_MODULE_NOT_FOUND")throw m}}let c;try{c=await s(t,r,s)}catch(a){if(a instanceof Error&&!o){if(a.code==="ERR_UNSUPPORTED_DIR_IMPORT")return await R(t,r,s);if(a.code==="ERR_MODULE_NOT_FOUND")return await b(t,r,s)}throw a}if(c.url.endsWith(".json"))return W(J({},c),{format:"json"});let{format:p}=c;return c.url.startsWith(T)&&(p=(e=S(c.url))!=null?e:p,p||(p=await E(c.url))),W(J({},c),{format:p})},X=async function(t,r,s){process.send&&process.send({type:"dependency",path:t}),t.endsWith(".json")&&(r.importAssertions||(r.importAssertions={}),r.importAssertions.type="json");const o=await s(t,r,s);if(!o.source)return o;const n=o.source.toString();if(o.format==="json"||l.test(t)){const i=await P(n,t,{tsconfigRaw:k});return{format:"module",source:f(i,t,u)}}const e=j(n);return e&&(o.source=f(e,t,u)),o},Y=async function(t,r,s){var o;return t.endsWith(".json")?{format:"module"}:t.startsWith("file:")?{format:(o=S(t))!=null?o:await E(t)}:await s(t,r,s)},Z=async function(t,r,s){const{url:o}=r;if(process.send&&process.send({type:"dependency",path:o}),o.endsWith(".json")||l.test(o)){const i=await P(t.toString(),o,{tsconfigRaw:k});return{source:f(i,o,u)}}const n=await s(t,r,s),e=j(n.source.toString());return e&&(n.source=f(e,o,u)),n},w=[16,12,0],y=process.version.slice(1).split(".").map(Number),N=(y[0]-w[0]||y[1]-w[1]||y[2]-w[2])<0,G=N?Y:void 0,tt=N?Z:void 0;export{G as getFormat,X as load,h as resolve,tt as transformSource};
