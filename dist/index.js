import{installSourceMapSupport as u,resolveTsPath as W,transform as g,transformDynamicImport as w}from"@esbuild-kit/core-utils";import _ from"get-tsconfig";import N from"path";import{init as T}from"es-module-lexer";import h from"fs";import{fileURLToPath as $}from"url";const m=/\.([cm]?ts|[tj]sx)$/,l=t=>{const r=N.extname(t);if(r===".mjs"||r===".mts")return"module";if(r===".cjs"||r===".cts")return"commonjs"};T.then(()=>{});const p=new Map;async function b(t){if(p.has(t))return p.get(t);if(!await h.promises.access(t).then(()=>!0,()=>!1)){p.set(t,void 0);return}const o=await h.promises.readFile(t,"utf8");try{const s=JSON.parse(o);return p.set(t,s),s}catch{throw new Error(`Error parsing: ${t}`)}}async function x(t){let r=new URL("package.json",t);for(;!r.pathname.endsWith("/node_modules/package.json");){const o=$(r),s=await b(o);if(s)return s;const n=r;if(r=new URL("../package.json",r),r.pathname===n.pathname)break}}async function y(t){var r;const o=await x(t);return(r=o==null?void 0:o.type)!=null?r:"commonjs"}var I=Object.defineProperty,F=Object.defineProperties,L=Object.getOwnPropertyDescriptors,j=Object.getOwnPropertySymbols,M=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable,O=(t,r,o)=>r in t?I(t,r,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[r]=o,P=(t,r)=>{for(var o in r||(r={}))M.call(r,o)&&O(t,o,r[o]);if(j)for(var o of j(r))A.call(r,o)&&O(t,o,r[o]);return t},v=(t,r)=>F(t,L(r));const S=u(),k=_(),V=k==null?void 0:k.config,C=/\.\w+$/,E=[".js",".json",".ts",".tsx",".jsx"],q=[...E,...E.map(t=>`/index${t}`)],i=async function(t,r,o){var s;if(t.startsWith("node:")&&(t=t.slice(5)),t.endsWith("/"))return i(`${t}index`,r,o);if(m.test(r.parentURL)){const a=W(t);if(a)try{return await i(a,r,o)}catch(c){if(c.code!=="ERR_MODULE_NOT_FOUND")throw c}}let n;try{n=await o(t,r,o)}catch(a){if(a instanceof Error){if(a.code==="ERR_UNSUPPORTED_DIR_IMPORT")return i(`${t}/index`,r,o);if(a.code==="ERR_MODULE_NOT_FOUND"&&!C.test(t))for(const c of q)try{const R=t+(t.endsWith("/")&&c.startsWith("/")?c.slice(1):c);return await i(R,r,o)}catch{}}throw a}if(n.url.endsWith(".json"))return v(P({},n),{format:"json"});let{format:e}=n;return n.url.startsWith("file:")&&(e=(s=l(n.url))!=null?s:e,e||(e=await y(n.url))),v(P({},n),{format:e})},z=async function(t,r,o){process.send&&process.send({type:"dependency",path:t}),t.endsWith(".json")&&(r.importAssertions||(r.importAssertions={}),r.importAssertions.type="json");const s=await o(t,r,o);if(!s.source)return s;const n=s.source.toString();if(s.format==="json"||m.test(t)){const a=await g(n,t,{format:"esm",tsconfigRaw:V});return a.map&&S.set(t,a.map),{format:"module",source:a.code}}const e=w({code:n});return e&&(s.source=e.code,e.map&&S.set(t,e.map)),s},U=_(),B=U==null?void 0:U.config,D=u(),H=async function(t,r,o){var s;return t.endsWith(".json")?{format:"module"}:t.startsWith("file:")?{format:(s=l(t))!=null?s:await y(t)}:await o(t,r,o)},K=async function(t,r,o){const{url:s}=r;if(process.send&&process.send({type:"dependency",path:s}),s.endsWith(".json")||m.test(s)){const a=await g(t.toString(),s,{format:"esm",tsconfigRaw:B});return a.map&&D.set(s,a.map),{source:a.code}}const n=await o(t,r,o),e=w({code:n.source.toString()});return e&&(n.source=e.code,e.map&&D.set(s,e.map)),n},f=[16,12,0],d=process.version.slice(1).split(".").map(Number),J=(d[0]-f[0]||d[1]-f[1]||d[2]-f[2])<0,Q=J?H:void 0,X=J?K:void 0;export{Q as getFormat,z as load,i as resolve,X as transformSource};
